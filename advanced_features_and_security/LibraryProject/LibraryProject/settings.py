"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-q(id*8c%=4^fw=ku0c-d0tesu6#gjo4a%7&&l!4f+$o95)n30n'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['yourdomain.com', 'www.yourdomain.com']


# Application definition

INSTALLED_APPS = [
    'accounts.apps.AccountsConfig',
    'relationship_app.apps.RelationshipAppConfig',
    'bookshelf.apps.BookshelfConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    
]

MIDDLEWARE = [
    'csp.middleware.CSPMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CSP_DEFAULT_SRC = ("'self'",)  # Allow content only from the same origin
CSP_SCRIPT_SRC = ("'self'", "https://trusted-cdn.com")  # Allow scripts from trusted sources
CSP_STYLE_SRC = ("'self'", "https://trusted-cdn.com")  # Allow styles from trusted sources

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'



# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'accounts.CustomUser'


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS =  [BASE_DIR / 'static',
]

AUTH_USER_MODEL = 'bookshelf.CustomUser'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# LibraryProject/settings.py

SECURE_BROWSER_XSS_FILTER = True  # Protect against XSS
X_FRAME_OPTIONS = 'DENY'  # Prevent clickjacking by disallowing embedding in iframes
SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevent browsers from sniffing content types

# LibraryProject/settings.py

CSRF_COOKIE_SECURE = True  # Secure CSRF cookie
SESSION_COOKIE_SECURE = True  # Secure session cookie

# LibraryProject/settings.py

CSRF_COOKIE_HTTPONLY = True  # Ensure CSRF cookie is not accessible by JavaScript
CSRF_USE_SESSIONS = True  # Use session-based CSRF tokens


# settings.py

# Redirect all HTTP requests to HTTPS
SECURE_SSL_REDIRECT = True

# HTTP Strict Transport Security (HSTS) settings
SECURE_HSTS_SECONDS = 31536000  # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Include all subdomains in the HSTS policy
SECURE_HSTS_PRELOAD = True  # Allow preloading of HSTS policy in browsers

# Ensure cookies are only sent over secure connections
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True


# settings.py

# Ensure session and CSRF cookies are only sent over HTTPS connections
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True


# settings.py

# Prevent the site from being framed (clickjacking protection)
X_FRAME_OPTIONS = 'DENY'

# Prevent browsers from sniffing the MIME type
SECURE_CONTENT_TYPE_NOSNIFF = True

# Enable the browser's XSS filtering
SECURE_BROWSER_XSS_FILTER = True

# settings.py

# Force HTTPS for all connections
SECURE_SSL_REDIRECT = True  # Redirects all non-HTTPS requests to HTTPS

# Enforce HTTPS with HSTS
SECURE_HSTS_SECONDS = 31536000  # One year in seconds
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Apply to all subdomains
SECURE_HSTS_PRELOAD = True  # Allows preloading of HSTS in browsers

# Secure cookies
SESSION_COOKIE_SECURE = True  # Ensures session cookies are only sent over HTTPS
CSRF_COOKIE_SECURE = True  # Ensures CSRF cookies are only sent over HTTPS

# Security Headers
X_FRAME_OPTIONS = 'DENY'  # Prevents framing of the page to avoid clickjacking
SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevents browsers from guessing the MIME type
SECURE_BROWSER_XSS_FILTER = True  # Enables browser XSS filtering
